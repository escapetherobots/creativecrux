@import 'bourbon'; // http://bourbon.io/

// colors

$color-1: #dbe2e9; // blue light
$color-2: #89ba2c; // green
$color-3: #424f5c; // blue dark
$color-4: #ffffff; // white
$green: #88C440;

// fonts 

$primary-font: 'Droid Sans', sans-serif;
$secondary-font: 'Droid Serif', serif;

// panel size

$panel-width-S: 100%;
$panel-width-M: 100%;
$panel-width-L: 75%;

/* -------------------------------- 

Primary style

-------------------------------- */

*, *::after, *::before {
	@include box-sizing(border-box);
}

*::after, *::before {
	content: '';
}



/* -------------------------------- 

Main components 

-------------------------------- */

html, body {
	height: 100%;
}

.cd-main-content {
	text-align: center;

	h1 {
		@include font-size(20px);
		color: lighten($color-3, 16%);
		padding: 4em 0;
	}

	.cd-btn {
		position: relative;
		display: inline-block;
		padding: 1em 2em;
		background-color: $color-2;
		color: $color-4;
		font-weight: bold;
		@include font-smoothing;
		border-radius: 50em;
		box-shadow: inset 0 1px 0 rgba(#fff, .5), 0 0 5px rgba(#000, .1);
		@include transition(all .2s);

		.no-touch &:hover {
			box-shadow: inset 0 1px 0 rgba(#fff, .5), 0 0 20px rgba(#000, .3);
		}
	}

	@include MQ(L) {
		h1 {
			@include font-size(32px);
		}
	}
}

.cd-panel {
	position: fixed;
	top: 0;
	left: 0;
	height: 100%;
	width: 100%;
	z-index: 999;
	visibility: hidden;
	@include transition(visibility 0s .6s);

	&::after {
		/* overlay layer */
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		background: rgba(#000, 0);
		cursor: pointer;
		@include transition(background .3s .3s);
	}

	&.is-visible {
		visibility: visible;
		@include transition(visibility 0s 0s);

		&::after {
			background: rgba(#000, .6);
			@include transition(background .3s 0s);
		}

		.cd-panel-close::before {
			@include animation(cd-close-1 .6s .3s);
		}

		.cd-panel-close::after {
			@include animation(cd-close-2 .6s .3s);
		}
	}
}

@include keyframes(cd-close-1) {
	0%, 50% {
		@include transform(rotate(0));
	}

	100% {
		@include transform(rotate(45deg));
	}
}

@include keyframes(cd-close-2) {
	0%, 50% {
		@include transform(rotate(0));
	}

	100% {
		@include transform(rotate(-45deg));
	}
}

.cd-panel-header {
	position: fixed;
	width: $panel-width-S; // variables inside partials > _variables.scss
	height: 53px;
	line-height: 50px;
	background: $green;
	z-index: 2;
	box-shadow: 0 1px 1px rgba(#000, .08);
	@include transition(top .3s 0s);

	h1 {
		font-weight: bold;
		color: #fff;
		padding-left: 5%;
	}

	.from-right &, .from-left & {
		top: -50px;
	}

	.from-right & {
		right: 0;
	}

	.from-left & {
		left: 0;
	}

	.is-visible & {
		top: 0;
		@include transition(top .3s .3s);
	}

	@include MQ(M) {
		width: $panel-width-M;
	}

	@include MQ(L) {
		width: $panel-width-L;
	}
}

.cd-panel-close {
	position: absolute;
	top: 0;
	right: 0;
	height: 100%;
	width: 60px;

	/* image replacement */
	display: inline-block;
	overflow: hidden;
	text-indent: 100%;
	white-space: nowrap;

	&::before, &::after {
		/* close icon created in CSS */
		position: absolute;
		top: 22px;
		left: 20px;
		height: 3px;
		width: 20px;
		background-color: $color-3;
		/* this fixes a bug where pseudo elements are slighty off position */
		-webkit-backface-visibility: hidden;
		backface-visibility: hidden;
	}

	&::before {
		@include transform(rotate(45deg));
	}

	&::after {
		@include transform(rotate(-45deg));
	}

	.no-touch &:hover {
		background-color: #3c3c3c;

		&::before, &::after {
			background-color: $color-4;
			@include transition-property(transform);
			@include transition-duration(.3s);
		}

		&::before {
			@include transform(rotate(220deg));
		}

		&::after {
			@include transform(rotate(135deg));
		}
	}
}

.cd-panel-container {
	position: fixed;
	width: $panel-width-S;
	height: 100%;
	top: 0;
	background: #fff;
	z-index: 1;
	@include transition-property(transform);
	@include transition-duration(.3s);
	@include transition-delay(.3s);

	.from-right & {
		right: 0;
		@include transform(translate3d(100%, 0, 0));
	}

	.from-left & {
		left: 0;
		@include transform(translate3d(-100%, 0, 0));
	}

	.is-visible & {
		@include transform(translate3d(0, 0, 0));
		@include transition-delay(0s);
	}

	@include MQ(M) {
		width: $panel-width-M;
	}

	@include MQ(L) {
		width: $panel-width-L;
	}
}

.cd-panel-content {
	position: absolute;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	padding: 70px 5%;
	overflow: auto;

	/* smooth scrolling on touch devices */
	-webkit-overflow-scrolling: touch;

	h2 {
		color: white;
	}

	p, li {
		@include font-size(18px);
		color: white;
		line-height: 1.8;
		margin: 2em 0;

		&:first-of-type {
			margin-top: 0;
		}
	}

	@include MQ(M) {
		p {
			@include font-size(16px);
			line-height: 1.6;
		}
	}


}

.cd-panel-content .cd-panel-resume {
	padding: 20px;
	display: block;

	h2, h3, h4, li, ul, p {
		color: #3c3c3c;
		font-family: "proxima_nova_rgregular";
		letter-spacing: 1px;
	}

	h2 {
		@include font-size(76px);
		@include line-height(74px);
		font-family: "bebas_neuelight";
		border-bottom: 1px solid #cccccc;
	}

	h3 {
		@include font-size(60px);
		@include line-height(60px);
		font-family: "bebas_neuebold";
		margin-top: 50px;
	}

	h3:first-of-type {
		margin-top:20px;
	}

	h4 {
		@include font-size(34px);
		@include line-height(36px);
		font-family: "proxima_nova_rgbold";
		margin-top: 40px;
		letter-spacing: .5px;
	}

	h4:first-of-type {
		margin-top: 20px;
	}

	p, li {
		@include font-size(30px);
		@include line-height(34px);
		text-transform: none;
		margin: 0;
		margin-top: 18px;
	}

	ul {
		list-style: disc outside none;
		padding-left: 20px;
	}

	li {
		padding: 0;
	}

	p.date {
			margin-top: 4px;
			font-style: italic;
	}

	.resume-left {
		@include span(12 of 12);
		margin-top:20px;

		@include MQ(L) {
			@include span(8 of 12);
		}
		
	}

	.resume-right {
		@include span(span 12 of 12);
		margin-top:0;

		@include MQ(L) {
			margin-top:20px;
			@include span(3.5 of 12 last);
		}
	}
}